require 'ruby-debug'
require 'rake'
require 'rake/testtask'
require 'rubygems'

Rake::TestTask.new do |t|
  t.libs << "test"
  t.test_files = FileList['test/test*.rb']
  t.verbose = true
end

task :default => :test

task :test => :"test-check-all"

desc "make sure you aren't forgetting to add any test files"
# For sanity we sometimes like to run the tests in a certain order
# so that more low-level failure occur first (tests are independent though!)
# so test files do not have a test_ name in front of them, except
# for 'test_all.rb'.  This is the file that asserts the order.
# This task makes sure that we haven't forgotten to add any files.
#
# this feels so wrong to code but so right to run
#
task :"test-check-all" do
  test_dir = File.dirname(__FILE__)+'/test'
  all_file = "#{test_dir}/test_all.rb"
  lines = File.open(all_file).lines.to_a
  names = []; lines.grep(%r{^require root \+ '/([^']+)'}){ names.push($1) }
  these = Dir[test_dir+'/*.rb'].map{|x| File.basename(x) }
  forgot = (these - ['test_all.rb']) - names
  if forgot.any?
    fail("did you forget to add "<<(forgot.join(' and '))<<" to "<<
      File.basename(all_file) << "?"
    )
  else
    puts "all #{these.size} test files are in #{File.basename(all_file)}"
  end
end


desc "hack turns the installed gem into a symlink to this directory"

task :hack do
  kill_path = %x{gem which hipe-parsie}
  abort(kill_path) if /Can't find/i =~ kill_path
  kill_path = File.dirname(File.dirname(kill_path))
  new_name  = File.dirname(kill_path)+'/ok-to-erase-'+File.basename(kill_path)
  FileUtils.mv(kill_path, new_name, :verbose => 1)
  this_path = File.dirname(__FILE__)
  FileUtils.ln_s(this_path, kill_path, :verbose => 1)
end

begin
  gem 'jeweler', '~> 1.4'
  require 'jeweler'

  Jeweler::Tasks.new do |gem|
    gem.name        = 'hipe-parsie'
    gem.summary     = 'the little engine that couldn\'t'
    gem.description = "it's the best"
    gem.email       = 'chip.malice@gmail.com'
    gem.homepage    = 'http://github.com/hipe/hipe-parsie'
    gem.authors     = [ 'Chip Malice' ]
  end

  Jeweler::GemcutterTasks.new
rescue LoadError
  puts 'Jeweler (or a dependency) not available. Install it with: gem install jeweler'
end
